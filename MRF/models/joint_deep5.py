import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils import data
from ..BaseModel import * 


class model(BaseModel):
	def __init__(self, nb_params=None, projection=None, ghost=False):
		super(model, self).__init__(False, True, nb_params=nb_params, projection=projection, ghost=ghost)
		if not self.ghost:
			self.fc1 = nn.Linear(666, self.projection.dimension_projection)
			
			self.t1fc01 = nn.Linear(self.projection.dimension_projection, 128)
			self.t1bn01 = nn.BatchNorm1d(128)
			self.t1fc2 = nn.Linear(128, 192)
			self.t1bn2 = nn.BatchNorm1d(192)
			self.t1fc3 = nn.Linear(192, 256)
			self.t1bn3 = nn.BatchNorm1d(256)
			self.t1fc4 = nn.Linear(256, 384)
			self.t1bn4 = nn.BatchNorm1d(384)
			self.t1fc04 = nn.Linear(384,512)
			self.t1bn04 = nn.BatchNorm1d(512)
			self.t1fc5 = nn.Linear(512, 640)
			self.t1bn5 = nn.BatchNorm1d(640)
			self.t1fc6 = nn.Linear(640,768)
			self.t1bn6 = nn.BatchNorm1d(768)
			self.t1fc7 = nn.Linear(768, 896)
			self.t1bn7 = nn.BatchNorm1d(896)
			self.t1fc8 = nn.Linear(896, 1024)
			self.t1bn8 = nn.BatchNorm1d(1024)
			self.t1fc9 = nn.Linear(1024, 1024)
			self.t1bn9 = nn.BatchNorm1d(1024)
			self.t1fc10 = nn.Linear(1024, 896)
			self.t1bn10 = nn.BatchNorm1d(896)
			self.t1fc11 = nn.Linear(896, 768)
			self.t1bn11 = nn.BatchNorm1d(768)
			self.t1fc12 = nn.Linear(768, 640)
			self.t1bn12 = nn.BatchNorm1d(640)
			self.t1fc13 = nn.Linear(640, 512)
			self.t1bn13  = nn.BatchNorm1d(512)
			self.t1fc14 = nn.Linear(512, 384)
			self.t1bn14 = nn.BatchNorm1d(384)
			self.t1fc15 = nn.Linear(384, 256)
			self.t1bn15 = nn.BatchNorm1d(256)
			self.t1fc16 = nn.Linear(256, 192)
			self.t1bn16 = nn.BatchNorm1d(192)
			self.t1fc17 = nn.Linear(192, 128)
			self.t1bn17 = nn.BatchNorm1d(128)
			self.t1fc18 = nn.Linear(128, 40)
			self.t1bn18 = nn.BatchNorm1d(40)
			self.t1fc19 = nn.Linear(40, 20)
			self.t1bn19 = nn.BatchNorm1d(20)
			self.t1fc20 = nn.Linear(20, 8)
			self.t1bn20 = nn.BatchNorm1d(8)
			self.t1fc21 = nn.Linear(8, 1)
			
			self.t2fc01 = nn.Linear(40, 128)
			self.t2bn01 = nn.BatchNorm1d(128)
			self.t2fc2 = nn.Linear(128, 192)
			self.t2bn2 = nn.BatchNorm1d(192)
			self.t2fc3 = nn.Linear(192, 256)
			self.t2bn3 = nn.BatchNorm1d(256)
			self.t2fc4 = nn.Linear(256, 384)
			self.t2bn4 = nn.BatchNorm1d(384)
			self.t2fc04 = nn.Linear(384,512)
			self.t2bn04 = nn.BatchNorm1d(512)
			self.t2fc5 = nn.Linear(512, 640)
			self.t2bn5 = nn.BatchNorm1d(640)
			self.t2fc6 = nn.Linear(640,768)
			self.t2bn6 = nn.BatchNorm1d(768)
			self.t2fc7 = nn.Linear(768, 896)
			self.t2bn7 = nn.BatchNorm1d(896)
			self.t2fc8 = nn.Linear(896, 1024)
			self.t2bn8 = nn.BatchNorm1d(1024)
			self.t2fc9 = nn.Linear(1024, 1024)
			self.t2bn9 = nn.BatchNorm1d(1024)
			self.t2fc10 = nn.Linear(1024, 896)
			self.t2bn10 = nn.BatchNorm1d(896)
			self.t2fc11 = nn.Linear(896, 768)
			self.t2bn11 = nn.BatchNorm1d(768)
			self.t2fc12 = nn.Linear(768, 640)
			self.t2bn12 = nn.BatchNorm1d(640)
			self.t2fc13 = nn.Linear(640, 512)
			self.t2bn13  = nn.BatchNorm1d(512)
			self.t2fc14 = nn.Linear(512, 384)
			self.t2bn14 = nn.BatchNorm1d(384)
			self.t2fc15 = nn.Linear(384, 256)
			self.t2bn15 = nn.BatchNorm1d(256)
			self.t2fc16 = nn.Linear(256, 192)
			self.t2bn16 = nn.BatchNorm1d(192)
			self.t2fc17 = nn.Linear(192, 128)
			self.t2bn17 = nn.BatchNorm1d(128)
			self.t2fc18 = nn.Linear(128, 40)
			self.t2bn18 = nn.BatchNorm1d(40)
			self.t2fc19 = nn.Linear(40, 20)
			self.t2bn19 = nn.BatchNorm1d(20)
			self.t2fc20 = nn.Linear(20, 8)
			self.t2bn20 = nn.BatchNorm1d(8)
			self.t2fc21 = nn.Linear(8, 1)
			
			
			self.m0sfc01 = nn.Linear(40, 128)
			self.m0sbn01 = nn.BatchNorm1d(128)
			self.m0sfc2 = nn.Linear(128, 192)
			self.m0sbn2 = nn.BatchNorm1d(192)
			self.m0sfc3 = nn.Linear(192, 256)
			self.m0sbn3 = nn.BatchNorm1d(256)
			self.m0sfc4 = nn.Linear(256, 384)
			self.m0sbn4 = nn.BatchNorm1d(384)
			self.m0sfc04 = nn.Linear(384,512)
			self.m0sbn04 = nn.BatchNorm1d(512)
			self.m0sfc5 = nn.Linear(512, 640)
			self.m0sbn5 = nn.BatchNorm1d(640)
			self.m0sfc6 = nn.Linear(640,768)
			self.m0sbn6 = nn.BatchNorm1d(768)
			self.m0sfc7 = nn.Linear(768, 896)
			self.m0sbn7 = nn.BatchNorm1d(896)
			self.m0sfc8 = nn.Linear(896, 1024)
			self.m0sbn8 = nn.BatchNorm1d(1024)
			self.m0sfc9 = nn.Linear(1024, 1024)
			self.m0sbn9 = nn.BatchNorm1d(1024)
			self.m0sfc10 = nn.Linear(1024, 896)
			self.m0sbn10 = nn.BatchNorm1d(896)
			self.m0sfc11 = nn.Linear(896, 768)
			self.m0sbn11 = nn.BatchNorm1d(768)
			self.m0sfc12 = nn.Linear(768, 640)
			self.m0sbn12 = nn.BatchNorm1d(640)
			self.m0sfc13 = nn.Linear(640, 512)
			self.m0sbn13  = nn.BatchNorm1d(512)
			self.m0sfc14 = nn.Linear(512, 384)
			self.m0sbn14 = nn.BatchNorm1d(384)
			self.m0sfc15 = nn.Linear(384, 256)
			self.m0sbn15 = nn.BatchNorm1d(256)
			self.m0sfc16 = nn.Linear(256, 192)
			self.m0sbn16 = nn.BatchNorm1d(192)
			self.m0sfc17 = nn.Linear(192, 128)
			self.m0sbn17 = nn.BatchNorm1d(128)
			self.m0sfc18 = nn.Linear(128, 40)
			self.m0sbn18 = nn.BatchNorm1d(40)
			self.m0sfc19 = nn.Linear(40, 20)
			self.m0sbn19 = nn.BatchNorm1d(20)
			self.m0sfc20 = nn.Linear(20, 8)
			self.m0sbn20 = nn.BatchNorm1d(8)
			self.m0sfc21 = nn.Linear(8, 1)
		  
	def forward(self, proj):
    
		if self.projection.initialization != 'Fixlayer':
			proj = self.fc1(proj)
		t1s128 = self.t1fc01(proj)
		t1s192= self.t1fc2(F.relu(self.t1bn01(t1s128)))
		t1s256 = self.t1fc3(F.relu(self.t1bn2(t1s192)))
		t1s384 = self.t1fc4(F.relu(self.t1bn3(t1s256)))
		t1s512 = self.t1fc04(F.relu(self.t1bn4(t1s384)))
		t1s640 = self.t1fc5(F.relu(self.t1bn04(t1s512)))
		t1s768 = self.t1fc6(F.relu(self.t1bn5(t1s640)))
		t1s896 = self.t1fc7(F.relu(self.t1bn6(t1s768)))
		t1s = F.relu(self.t1bn8(self.t1fc8(F.relu(self.t1bn7(t1s896)))))
		t1s= F.relu(self.t1bn9(self.t1fc9(t1s)))
		t1s= self.t1fc10(t1s)
		t1s= self.t1fc11(t1s+t1s896)
		t1s= self.t1fc12(t1s+t1s768)
		t1s= self.t1fc13(t1s+t1s640)
		t1s= self.t1fc14(t1s+t1s512)
		t1s= self.t1fc15(t1s+t1s384)
		t1s= self.t1fc16(t1s+t1s256)
		t1s= self.t1fc17(t1s+t1s192)
		t1s= self.t1fc18(t1s+t1s128)
		t1s= F.relu(self.t1fc19(t1s+proj))
		t1s= F.relu(self.t1fc20(t1s))
		t1s= self.t1fc21(t1s)

			
		if self.projection.initialization != 'Fixlayer':
			proj = self.fc1(proj)
		t2s128 = self.t2fc01(proj)
		t2s192= self.t2fc2(F.relu(self.t2bn01(t2s128)))
		t2s256 = self.t2fc3(F.relu(self.t2bn2(t2s192)))
		t2s384 = self.t2fc4(F.relu(self.t2bn3(t2s256)))
		t2s512 = self.t2fc04(F.relu(self.t2bn4(t2s384)))
		t2s640 = self.t2fc5(F.relu(self.t2bn04(t2s512)))
		t2s768 = self.t2fc6(F.relu(self.t2bn5(t2s640)))
		t2s896 = self.t2fc7(F.relu(self.t2bn6(t2s768)))
		t2s = F.relu(self.t2bn8(self.t2fc8(F.relu(self.t2bn7(t2s896)))))
		t2s= F.relu(self.t2bn9(self.t2fc9(t2s)))
		t2s= self.t2fc10(t2s)
		t2s= self.t2fc11(t2s+t2s896)
		t2s= self.t2fc12(t2s+t2s768)
		t2s= self.t2fc13(t2s+t2s640)
		t2s= self.t2fc14(t2s+t2s512)
		t2s= self.t2fc15(t2s+t2s384)
		t2s= self.t2fc16(t2s+t2s256)
		t2s= self.t2fc17(t2s+t2s192)
		t2s= self.t2fc18(t2s+t2s128)
		t2s= F.relu(self.t2fc19(t2s+proj))
		t2s= F.relu(self.t2fc20(t2s))
		t2s= self.t2fc21(t2s)

			
		if self.projection.initialization != 'Fixlayer':
			proj = self.fc1(proj)
		m0ss128 = self.m0sfc01(proj)
		m0ss192= self.m0sfc2(F.relu(self.m0sbn01(m0ss128)))
		m0ss256 = self.m0sfc3(F.relu(self.m0sbn2(m0ss192)))
		m0ss384 = self.m0sfc4(F.relu(self.m0sbn3(m0ss256)))
		m0ss512 = self.m0sfc04(F.relu(self.m0sbn4(m0ss384)))
		m0ss640 = self.m0sfc5(F.relu(self.m0sbn04(m0ss512)))
		m0ss768 = self.m0sfc6(F.relu(self.m0sbn5(m0ss640)))
		m0ss896 = self.m0sfc7(F.relu(self.m0sbn6(m0ss768)))
		m0ss = F.relu(self.m0sbn8(self.m0sfc8(F.relu(self.m0sbn7(m0ss896)))))
		m0ss= F.relu(self.m0sbn9(self.m0sfc9(m0ss)))
		m0ss= self.m0sfc10(m0ss)
		m0ss= self.m0sfc11(m0ss+m0ss896)
		m0ss= self.m0sfc12(m0ss+m0ss768)
		m0ss= self.m0sfc13(m0ss+m0ss640)
		m0ss= self.m0sfc14(m0ss+m0ss512)
		m0ss= self.m0sfc15(m0ss+m0ss384)
		m0ss= self.m0sfc16(m0ss+m0ss256)
		m0ss= self.m0sfc17(m0ss+m0ss192)
		m0ss= self.m0sfc18(m0ss+m0ss128)
		m0ss= F.relu(self.m0sfc19(m0ss+proj))
		m0ss= F.relu(self.m0sfc20(m0ss))
		m0ss= self.m0sfc21(m0ss)

			
			
		result = torch.cat((m0ss,t1s,t2s),dim=1)
		return result